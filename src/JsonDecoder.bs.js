// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

var DecodeError = Caml_exceptions.create("JsonDecoder-ReactHooksTemplate.DecodeError");

function MakeJsonDecoder(M) {
  var parseArray = function (json) {
    if (Array.isArray(json)) {
      var length = json.length;
      var target = new Array(length);
      for(var i = 0 ,i_finish = length - 1 | 0; i <= i_finish; ++i){
        var value;
        try {
          value = json[i];
        }
        catch (raw_exn){
          var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
          if (exn[0] === DecodeError) {
            throw [
                  DecodeError,
                  exn[1] + ("\n\tin array at index " + String(i))
                ];
          } else {
            throw exn;
          }
        }
        target[i] = value;
      }
      return /* Ok */Block.__(0, [target]);
    } else {
      return /* Error */Block.__(1, ["Expected array, got " + JSON.stringify(json)]);
    }
  };
  return /* module */[/* parseArray */parseArray];
}

exports.DecodeError = DecodeError;
exports.MakeJsonDecoder = MakeJsonDecoder;
/* No side effect */
